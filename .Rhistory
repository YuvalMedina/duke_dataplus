xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
runApp()
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, colour="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, colour="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(values=c("red","blue", "red","blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, colour="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, colour="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(values=c("red","red", "blue","blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, colour="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, colour="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(values=c("red","blue"))+
scale_fill_manual(values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
scale_fill_manual("",values=c("red", "blue"))+
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, colour="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, colour="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual("",values=c("red","blue"))+
scale_fill_manual("",values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, colour="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, colour="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual("",values=c("red","blue"))+
scale_fill_manual("",values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual("",values=c("red","blue"))+
scale_fill_manual("",values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(values=c("red","blue"))+
scale_fill_manual(values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(values=c("red", "blue"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
runApp()
rsconnect::deployApp('/Users/jincho/duke_dataplus/Dirty Data Log')
runApp()
runApp()
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_continuous(breaks = seq(by = 2))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_continuous(breaks = seq(1,10,by = 2))+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_date(date_breaks = "months" , date_labels = "%b-%y")+
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_date(limits = as.Date(c("1980-01-01","2000-01-01"))) +
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
df <- data.frame(
date = as.Date(clean$solar_date),
GPP = clean$GPP,
GPP_upper = clean$GPP_upper,
GPP_lower = clean$GPP_lower,
ER = clean$ER,
ER_upper = clean$ER_upper,
ER_lower = clean$ER_lower
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_date(limits = as.Date(c("1980-01-01","2000-01-01"))) +
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
clean <- read.csv("Month_metab.csv")
df <- data.frame(
date = as.Date(clean$solar_date),
GPP = clean$GPP,
GPP_upper = clean$GPP_upper,
GPP_lower = clean$GPP_lower,
ER = clean$ER,
ER_upper = clean$ER_upper,
ER_lower = clean$ER_lower
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_date(limits = as.Date(c("2018-01-01","2000-01-01"))) +
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
ggplot(data=df, aes(x=date)) +
geom_line(aes(y=GPP, group = 1, colour="GPP"))+
geom_line(aes(y=ER,  group = 1, colour = "ER"))+
geom_ribbon(aes(ymin=df$GPP_lower, ymax=df$GPP_upper, group=1, fill="GPP 95% Confidence"), fill = "blue", alpha=0.25)+
geom_ribbon(aes(ymin=df$ER_lower, ymax=df$ER_upper, group=1, fill="ER 95% Confidence"), fill = "red", alpha=0.25)+
scale_colour_manual(name="Oxygen Variables Observed", values=c("ER"="red","GPP"="blue"))+
scale_fill_manual(name='Oxygen Variables Observed',values=c("GPP 95% Confidence"="blue", "ER 95% Confidence"="red"))+
scale_x_date(limits = as.Date(c("2017-03-07","2017-04-07"))) +
xlab("Date")+
ylab("Oxygen")+
theme(
plot.title = element_text( size=17, face="bold"),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold")
)
runApp()
rsconnect::deployApp('/Users/jincho/duke_dataplus/Dirty Data Log')
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/jincho/duke_dataplus/Dirty Data Log')
runApp()
outlier.detect <- function(raw_dat){
my_dat <- read.csv(raw_dat)   #read csv of one site, one variable
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
#new "gap" column with time intervals
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
#what the biggest difference should be
gap_threshold <- 2
#see if gap is larger than threshold
df$over_thresh <- df$diff > gap_threshold
#list of TRUE or FALSE for if gap>threshold
outliers <- df$over_thresh == TRUE
#list "where_gaps" of indices of end of gap
where_gaps = which(outliers)
where_gaps
}
raw <- read.csv("NC_NHC_DO_mgL.csv")
raw <- read.csv("NC_Eno_DO_mgL.csv")
raw <- read.csv("NC_Eno_DO_mgL.csv")
raw <- read.csv("NC_Eno_DO_mgL.csv")
setwd("/Users/jincho/duke_dataplus")
raw <- read.csv("NC_Eno_DO_mgL.csv")
raw <- read.csv("NC_Eno_DO_mgL.csv")
outlier.detect <- function(raw_dat){
my_dat <- read.csv(raw_dat)   #read csv of one site, one variable
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
#new "gap" column with time intervals
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
#what the biggest difference should be
gap_threshold <- 2
#see if gap is larger than threshold
df$over_thresh <- df$diff > gap_threshold
#list of TRUE or FALSE for if gap>threshold
outliers <- df$over_thresh == TRUE
#list "where_gaps" of indices of end of gap
where_gaps = which(outliers)
where_gaps
}
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
View(df)
gap_threshold <- 2
df$over_thresh <- df$diff > gap_threshold
View(df)
View(df)
gap_threshold <- 1
df$over_thresh <- df$diff > gap_threshold
outlier.detect <- function(raw_dat){
my_dat <- read.csv(raw_dat)   #read csv of one site, one variable
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
#new "gap" column with time intervals
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
#what the biggest difference should be
gap_threshold <- 2
#see if gap is larger than threshold
df$over_thresh <- df$diff > gap_threshold
#list of TRUE or FALSE for if gap>threshold
outliers <- df$over_thresh == TRUE
#list "where_gaps" of indices of end of gap
where_gaps = which(outliers)
where_gaps
}
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
gap_threshold <- 1
df$over_thresh <- df$diff > gap_threshold
outliers <- df$over_thresh == TRUE
print(outliers)
where_gaps = which(outliers)
print(where_gaps)
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
gap_threshold <- 1
df$over_thresh <- df$diff > gap_threshold
outliers <- df$over_thresh
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, value[-1] - value[-nrow(df)]))
gap_threshold <- 1
df$over_thresh <- df$diff > gap_threshold
where_gaps = which(df$over_thresh)
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, abs(value[-1] - value[-nrow(df)])))
gap_threshold <- 1
df$over_thresh <- df$diff > gap_threshold
where_gaps = which(df$over_thresh)
print(where_gaps)
lapply(where_out, function(x) df$value[x])
where_out = which(df$over_thresh)
print(where_out)
lapply(where_out, function(x) df$value[x])
lapply(where_out, function(x) df[x])
lapply(where_out, function(x) df[[x]])
lapply(where_out, function(x) df.loc(x)
lapply(where_out, function(x) df.loc(x))
lapply(where_out, function(x) df[x,])
lapply(where_out, function(x) my_dat[x,])
df_out <- lapply(where_out, function(x) my_dat[x,])
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df_out[nrow(df_out)+1,] = lapply(where_out, function(x) my_dat[x,])
df_out[nrow(df_out)+1,] = list(lapply(where_out, function(x) my_dat[x,]))
df_out = data.frame()
df_out[nrow(df_out)+1,] = lapply(where_out, function(x) my_dat[x,])
View(df_out)
View(df)
View(df_out)
lapply(where_out, function(x) my_dat[x,])
output <- lapply(where_out, function(x) my_dat[x,])
print(output)
print(output[1])
print(output[1]$dateTimeUTC)
print(output[1][1])
print(output[1][[1]])
print(output[[1]][1])
print(output[[2]][1])
print(output[[4]][1])
output <- lapply(where_out, function(x) df[x,])
print(output[[4]][1])
df_out$dates <- output[[4]][1]
df_out$values <- output[[4]][2]
View(df_out)
df_out<- output[[4]]
View(df_out)
output <- lapply(where_out, function(x) df_out<-df[x,])
View(output)
View(output)
output <- lapply(where_out, function(x) df[x,])
View(output)
View(output)
f
f
output <- lapply(where_out, function(x) df[x,])
my_dat<- read.csv("NC_Eno_DO_mgL.csv")
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
df$diff <- c(NA, with(df, abs(value[-1] - value[-nrow(df)])))
diff_threshold <- 1
df$over_thresh <- df$diff > diff_threshold
where_out = which(df$over_thresh)
print(where_out)
df_out = data.frame()
output <- lapply(where_out, function(x) df[x,])
output <- lapply(where_out, function(x) df[x,])
df_out <- data.frame(matrix(unlist(output), nrow=length(output), byrow=T))
View(df_out)
View(df_out)
View(output)
View(output)
output <- lapply(where_out, function(x) my_dat[x,])
df_out <- data.frame(matrix(unlist(output), nrow=length(output), byrow=T))
View(df_out)
unlist(output)
output<-unlist(output)
output <- ldply(where_out, function(x) my_dat[x,])
library(plyr)
output <- ldply(where_out, function(x) my_dat[x,])
View(output)
outliers <- ldply(where_out, function(x) my_dat[x,])
View(outliers)
View(outliers)
outlier.detect <- function(raw_dat){
my_dat <- read.csv(raw_dat)   #read csv of one site, one variable
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
#new "diff" column with consecutive value differences
df$diff <- c(NA, with(df, abs(value[-1] - value[-nrow(df)])))
#what the biggest difference should be
diff_threshold <- 1
#see if diff is larger than threshold
df$over_thresh <- df$diff > diff_threshold
#indices of there difference is over threshold
where_out = which(df$over_thresh)
outliers <- ldply(where_out, function(x) my_dat[x,])
outliers
}
library(ggplot2)
outlier.detect(my_dat)
outlier.detect("NC_Eno_DO_mgL.csv")
my_dat <- read.csv("NC_Eno_DO_mgL.csv")
my_out <- outlier.detect("NC_Eno_DO_mgL.csv")
View(my_out)
ggplot()+
geom_point(my_dat, aes(x=dateTimeUTC, y=value, colour="blue"))+
geom_point(my_out, aed(x=dateTimeUTC, y=value, colour="red"))
ggplot()+
geom_point(my_dat, mapping=aes(x=dateTimeUTC, y=value, colour="blue"))+
geom_point(my_out, mapping=aes(x=dateTimeUTC, y=value, colour="red"))
ggplot()+
geom_point(my_dat, mapping=aes(x=dateTimeUTC, y=value, colour="blue"))+
geom_point(my_out, mapping=aes(x=dateTimeUTC, y=value, colour="red"))
ggplot()+
geom_point(my_dat, mapping=aes(x=dateTimeUTC, y=value, colour="blue"))+
geom_point(my_out, mapping=aes(x=dateTimeUTC, y=value, colour="red"))
ggplot()+
geom_point(my_dat, mapping=aes(x=dateTimeUTC, y=value, colour="blue"))+
geom_point(my_out, mapping=aes(x=dateTimeUTC, y=value, colour="red"))
#new dataframe of dates and values
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
#new "diff" column with consecutive value differences
df$diff <- c(NA, with(df, abs(value[-1] - value[-nrow(df)])))
#what the biggest difference should be
diff_threshold <- 1
#see if diff is larger than threshold
df$over_thresh <- df$diff > diff_threshold
#indices of there difference is over threshold
where_out = which(df$over_thresh)
outliers <- ldply(where_out, function(x) my_dat[x,])
outliers
df <- data.frame(date = as.POSIXct(my_dat$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"), value = my_dat$value)
