aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("12017-03-04"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-04"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
plot(df_disch$date, df_disch$value)
ggplot() +
#geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))
View(clean)
View(clean)
View(clean)
ggplot() +
geom_rect(data = bounds,
mapping = aes(xmin = x1, xmax = x2, ymin = y1, ymax = y2),
fill="red",color = "black", alpha = 0.5) +
#geom_dotplot(data = df_disch, aes(df_disch$date, df_disch$value))
d = data.frame(x1=c(decimal_date(as.Date(c("2017-03-02")))), x2=c(decimal_date(as.Date(c("2017-03-03")))), y1=c(-Inf), y2=c(Inf), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
d = data.frame(x1=c(decimal_date(as.Date(c("2017-03-02")))), x2=c(decimal_date(as.Date(c("2017-03-03")))), y1=c(-Inf), y2=c(Inf), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=bounds, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=t), color="black", alpha=0.5) +
geom_text(data=bounds, aes(x=x1+(x2-x1)/2, y=y1+(y2-y1)/2, label=r), size=4)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=bounds, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=t), color="black", alpha=0.5)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=bounds, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color="black", alpha=0.5)
d = data.frame(x1=c(decimal_date(as.Date(("2017-03-02")))), x2=c(decimal_date(as.Date(("2017-03-03")))), y1=c(-Inf), y2=c(Inf), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=bounds, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color="black", alpha=0.5)
d = data.frame(x1=c(decimal_date(as.Date("2017-03-02"))), x2=c(decimal_date(as.Date("2017-03-03"))), y1=c(-Inf), y2=c(Inf), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=bounds, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color="black", alpha=0.5)
(
ggplot() +
geom_line(df_disch, mapping=aes_string(x=date, y=values))
ggplot() +
geom_line(df_disch, mapping=aes_string(x=date, y=values))
df_disch <- data.frame(
date = storm_disch$dateTimeUTC,
values = storm_disch$value
)
gplot() +
geom_line(df_disch, mapping=aes_string(x=date, y=values))
ggplot() +
geom_line(df_disch, mapping=aes_string(x=date, y=values))
ggplot() +
geom_line(df_disch, mapping=aes_string(x=date, y=values))
ggplot() +
geom_line(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
df_DO <- data.frame(
date = storm_DO$dateTimeUTC,
values = storm_DO$value
)
ggplot() +
geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
#geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
a<-rnorm(300)
a_ts<-ts(a, start=c(1910, 1), frequency=12)
a_time<-time(a_ts)
a_series<-ts.union(big=a_ts, month=a_time)
a_series_df<-as.data.frame(a_series)
ggplot(a_series)+
geom_line(mapping=aes_string(x="month", y="big"))+
geom_rect(
fill="red",alpha=0.5,
mapping=aes_string(x="month", y="big"),
xmin=as.numeric(as.Date(c("1924-01-01"))),
xmax=as.numeric(as.Date(c("1928-12-31"))),
ymin=0,
ymax=2
)
geom_rect(
fill="red",alpha=0.5,
mapping=aes_string(x="month", y="big"),
aes(
xmin=as.numeric(as.Date(c("1924-01-01"))),
xmax=as.numeric(as.Date(c("1928-12-31"))),
ymin=0,
ymax=2)
)
data = data.frame(xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-03"))),
ymin = -Inf,
ymax = Inf)
decimal_date(as.Date(c("2017-03-02")))
ggplot(df_disch)+
geom_line(mapping = aes_string(x = "date", y = "values")) +
geom_rect(
fill = "red", alpha = 0.5,
mapping = aes_string(x = "date", y = "values"),
xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-04"))),
ymin = 0,
ymax = 2
)
ggplot(df_disch)+
geom_line(mapping = aes_string(x = "date", y = "values"))
ggplot(df_disch)+
geom_line(mapping = aes(x = "date", y = "values"))
ggplot(df_disch)+
geom_line(mapping = aes(x = "date", y = "values"))
ggplot(df_disch)+
geom_line(mapping = aes(x = "date", y = "values")) +
geom_rect(
fill = "red", alpha = 0.5,
mapping = aes_string(x = "date", y = "values"),
xmin = decimal_date(as.Date(c("2017-03-02"))),
xmax = decimal_date(as.Date(c("2017-03-04"))),
ymin = 0,
ymax = 2
)
head(data)
data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = -Inf,
ymax = Inf)
head(data)
ggplot() +
geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
#geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = Inf)
data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 20)
head(data)
ggplot() +
#geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_point(df_DO, mapping=aes(x=date, y=values))+
geom_rect(data = data,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_rect(data = data,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)+
geom_point(df_DO, mapping=aes(x=date, y=values))
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 20),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.5)
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 20),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = -20,
ymax = 20),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 10),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 10),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_point(df_DO, mapping=aes(x=date, y=values))
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 10),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_point(df_disch, mapping=aes(x=date, y=values))
df_disch <- data.frame(
date = as.Date(storm_disch$dateTimeUTC),
values = storm_disch$value
)
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 10),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_point(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_point(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_dotplot(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2) +
geom_point(df_disch, mapping=aes(x=date, y=values))
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
df_disch <- data.frame(
date = as.Date(storm_disch$dateTimeUTC, format = "%Y-%m-%d %H:%M:%S"),
values = storm_disch$value
)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
df_disch <- data.frame(
date = as.Date(storm_disch$dateTimeUTC, format = "%Y-%m-%d %H:%M:%S"),
values = storm_disch$value
)
my_dat <- read.csv(raw_dat)   #read csv of one site, one variable
df_disch <- data.frame(
date = as.POSIXct(storm_disch$dateTimeUTC, tz='',
format = "%Y-%m-%d %H:%M:%S"),
values = storm_disch$value
)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = as.Date(c("2017-03-02")),
xmax = as.Date(c("2017-03-03")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
ggplot() +
geom_point(df_disch, mapping=aes(x=date, y=values))+
geom_rect(data = data.frame(xmin = as.POSIXct(c("2017-03-02 00:00:00")),
xmax = as.POSIXct(c("2017-03-03 00:00:00")),
ymin = 0,
ymax = 6),
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "red", alpha = 0.2)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dirty_dates <- vector(mode = "list", length = 3)
names(dirty_dates) <- c("Storm", "Outliers", "Gaps")
dirty_dates[[1]] <- c("2017-03-02 00:00:00", "2017-03-03 00:00:00")
dirty_dates[[3]] <- c("2018-10-03 12:00:00", "2018-10-04 12:00:00")
dirt_dates[[1]]
dirty_dates[[1]]
dirty_dates[[1]][1]
runApp()
dirty_dates$Storm
runApp()
dirty_dates$dirty_choice[1]
dirty_dates$dirty_choice[1]
runApp()
shiny::runApp()
runApp()
dirty_dates$dirty_choice()[1]
dirty_dates$dirty_choice()[1]
dirty_choice()
runApp()
dirty_dates$Storm
dirty_dates$Storm[1]
dirty_dates$Storm[2]
runApp()
runApp()
runApp()
runApp()
View(data)
dirty_dates$Stoem[1]
dirty_dates$Storm[1]
runApp()
runApp()
gaps_DO <- read.csv("gaps_DO.csv")
head(gaps_DO)
runApp()
runApp()
runApp()
ui <- fluidPage(
navbarPage(title = "Guide to Dirty Data",
tabPanel("Metabolism",
fluidRow(
column(8, offset=2,
h1("Metabolism"),
br(),
h3("What is Metabolism"),
"Stream metabolism is the measure of energy exchanged within the
stream ecosystem in the forms of oxygen and carbon. The two primary modes
of exchange are primary production by autotrophs in which oxygen is produced and
carbon is consumed, and respiration by heterotrophs in which oxygen is consumed
carbon is produced. As research in stream metabolism modeling expands, we can gain
a deeper understanding in how different external disturbances and environments
can affect the productivity of the stream ecosystem.",
br(),
br(),
br(),
HTML('<center><img src="O and CO2 Exchange.jpg", width = 500, height = 300></center>'),
br(),
h3("Modeling Metabolism"),
"In 1956, Odum and his team developed a model that estimates metabolism as a function of oxygen concentration:",
withMathJax(
helpText('$$\\frac{dO}{dt}=\\mathrm{GPP+ER}+K*\\mathrm{O}_\\mathrm{def}$$')
),
"This model uses the change in oxygen over every time interval to calculate the
oxygen produced through primary production and consumed through respiration to calculate
the average metabolism for each day. Therefore, to accurately model metabolism, the
oxygen curve must be a complete data set with few gaps. There must also be a high variance
in oxygen concentration such as in the oxygen curve below showing data for one day.",
HTML('<center><img src="DO curve.png", width = 400, height = 400></center>')
)
)
),
tabPanel("Clean Data",
fluidRow(
column(10, offset=0,
sidebarLayout(
sidebarPanel(
h3("Clean Data"),
"Here are some time series plots over varying time intervals
that portray clean and complete oxygen curves ideal for
accurately modeling stream metabolism.",
br(),
br(),
selectInput(inputId = "cleanVar",
label = "Select time interval:",
choices = c("Day", "Week", "Month", "Year")
)
),
mainPanel(
h1("Ideal Data for Modeling Metabolism"),
textOutput("selected_clean"),
plotOutput("plot_time")
)
)
)
)
),
tabPanel("Dirty Data",
sidebarLayout(
sidebarPanel(
# selectInput(inputId = "dirtyVar",
#          label = "Select a file",
#         choices = list.files(pattern='.csv')
#  ),
# sliderInput(inputId = "time_int",
#            label = "Select time interval of data collection (minutes)",
#           min = 0, max = 60, value = 30, step = 5),
selectInput(inputId = "dirtyType",
label = "Select a type of dirty data",
choices = c("Storm", "Outliers", "Gaps", "Sensor Error"))
#plotOutput("plot_time")
),
mainPanel(
h1("Examples and Explanations of Dirty Data"),
br(),
textOutput("dirty_type"),
tags$head(tags$style("#dirty_type{color: black;
font-size: 24px;
font-style: bold;
}")
),
br(),
uiOutput("dirty_img"),
textOutput("dirty_text"),
br(),
plotOutput("dirty_disch_plot"),
textOutput("dirty_info"),
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp('~')
runApp('duke_dataplus/Dirty Data Log')
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
